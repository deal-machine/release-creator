name: Create Branch from Selected Release and Update Version

on:
  workflow_dispatch:
    inputs:
      type:
        description: 'Type of version update: patch, minor, or major'
        required: true
        default: 'patch'
      branch_type:
        description: 'Type of branch: feature, bugfix, or hotfix'
        required: true
        default: 'feature'

permissions:
  contents: write

jobs:
  create-branch-from-selected-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Checkout the branch specified in "Use workflow from"
        run: |
          # O GitHub Actions automaticamente sabe qual branch foi selecionada
          echo "Checking out the branch: $GITHUB_REF"
          git fetch --all
          git checkout $GITHUB_REF
          git pull origin $GITHUB_REF

      - name: Get the release version
        id: get_release_version
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          RELEASE_VERSION=${RELEASE_VERSION//release\//}
          echo "Release version: $RELEASE_VERSION"
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

      - name: Increment version based on input type
        run: |
          IFS='.' read -r MAJOR MINOR PATCH <<< "${{ env.RELEASE_VERSION }}"

          if [[ "${{ inputs.type }}" == "major" ]]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ "${{ inputs.type }}" == "minor" ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          else
            PATCH=$((PATCH + 1))
          fi

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"

          jq --arg version "$NEW_VERSION" '.version = $version' package.json > package.tmp.json
          mv package.tmp.json package.json

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "chore: update version to $NEW_VERSION"

          # git push origin HEAD

          BRANCH_NAME="${{ inputs.branch_type }}/$NEW_VERSION"
          echo "Creating new branch: $BRANCH_NAME"
          git checkout -b $BRANCH_NAME
          git push origin $BRANCH_NAME
